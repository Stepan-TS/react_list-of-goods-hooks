{"version":3,"sources":["App.tsx","components/GoodItem/GoodItem.tsx","components/GoodsList/GoodsList.tsx","index.tsx"],"names":["SortType","GoodsItem","good","GoodsList","goods","map","goodsFromServer","App","useState","isReversed","setIsReversed","NONE","sortType","setSortType","visibleGoods","sort","good1","good2","ALPHABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","type","classNames","onClick","ReactDOM","render","document","getElementById"],"mappings":"6KAmBKA,E,0ECfQC,EAA6B,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAC3C,OACE,oBAEE,UAAQ,OAFV,SAIGA,GAHIA,ICDEC,EAA6B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC3C,OACE,6BACGA,EAAMC,KAAI,SAAAH,GAAI,OACb,cAAC,EAAD,CAAWA,KAAMA,UFJZI,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGN,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAuCE,IAAMO,EAAgB,WAC3B,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAASR,EAASW,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KAEMT,EA/BD,SACLA,EADK,GAGJ,IADCQ,EACF,EADEA,SAAUH,EACZ,EADYA,WAGNK,EAAY,YAAOV,GAmBzB,OAjBAU,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQL,GACN,KAAKZ,EAASkB,SACZ,OAAOF,EAAMG,cAAcF,GAC7B,KAAKjB,EAASoB,OACZ,OAAOJ,EAAMK,OAASJ,EAAMI,OAC9B,QACE,OAAO,MAITZ,GACFK,EAAaQ,UAKRR,EAOOS,CAAkBjB,EAAiB,CAAEG,aAAYG,aAmB/D,OACE,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CACE,WAAYd,IAAaZ,EAASkB,WAGtCS,QA5Be,WACrBd,EAAYb,EAASkB,WAmBjB,iCAaA,wBACEO,KAAK,SACLD,UAAWE,IACT,oBACA,CACE,WAAYd,IAAaZ,EAASoB,SAGtCO,QArCa,WACnBd,EAAYb,EAASoB,SA4BjB,4BAaA,wBACEK,KAAK,SACLD,UAAWE,IACT,oBACA,CACE,YAAajB,IAGjBkB,QA9CQ,WACdjB,GAAeD,IAqCX,sBAaGA,GAAcG,KAAcZ,EAASW,MACtC,wBACEc,KAAK,SACLD,UAAU,4BACVG,QAnDI,WACZjB,GAAc,GACdG,EAAYb,EAASW,OA8Cf,sBASJ,cAAC,EAAD,CAAWP,MAAOA,QGlIxBwB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.6f7f2e40.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\nimport { GoodsList } from './components/GoodsList/GoodsList';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render method to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((good1, good2) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return good1.localeCompare(good2);\n      case SortType.LENGTH:\n        return good1.length - good2.length;\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n  // Sort and reverse goods if needed\n  // eslint-disable-next-line no-console\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n\n  const goods = getReorderedGoods(goodsFromServer, { isReversed, sortType });\n\n  const sortByAlphabet = () => {\n    setSortType(SortType.ALPHABET);\n  };\n\n  const sortByLength = () => {\n    setSortType(SortType.LENGTH);\n  };\n\n  const reverse = () => {\n    setIsReversed(!isReversed);\n  };\n\n  const reset = () => {\n    setIsReversed(false);\n    setSortType(SortType.NONE);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-info',\n            {\n              'is-light': sortType !== SortType.ALPHABET,\n            },\n          )}\n          onClick={sortByAlphabet}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-success',\n            {\n              'is-light': sortType !== SortType.LENGTH,\n            },\n          )}\n          onClick={sortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-warning',\n            {\n              'is-light': !isReversed,\n            },\n          )}\n          onClick={reverse}\n        >\n          Reverse\n        </button>\n\n        {((isReversed || sortType) !== SortType.NONE) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n      <GoodsList goods={goods} />\n    </div>\n  );\n};\n","type Props = {\n  good: string,\n};\n\nexport const GoodsItem: React.FC<Props> = ({ good }) => {\n  return (\n    <li\n      key={good}\n      data-cy=\"Good\"\n    >\n      {good}\n    </li>\n  );\n};\n","import { GoodsItem } from '../GoodItem/GoodItem';\n\ntype Props = {\n  goods: string[];\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => {\n  return (\n    <ul>\n      {goods.map(good => (\n        <GoodsItem good={good} />\n      ))}\n    </ul>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}